// 4.25.0 0xc1c150ef
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_50_medium_rounded_normal[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID = 0, Size: 240x50 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_50_medium_rounded_pressed[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID = 1, Size: 240x50 pixels
extern const unsigned char image_cell0[]; // BITMAP_CELL0_ID = 2, Size: 50x50 pixels
extern const unsigned char image_cell1024[]; // BITMAP_CELL1024_ID = 3, Size: 50x50 pixels
extern const unsigned char image_cell128[]; // BITMAP_CELL128_ID = 4, Size: 50x50 pixels
extern const unsigned char image_cell16[]; // BITMAP_CELL16_ID = 5, Size: 50x50 pixels
extern const unsigned char image_cell2[]; // BITMAP_CELL2_ID = 6, Size: 50x50 pixels
extern const unsigned char image_cell2048[]; // BITMAP_CELL2048_ID = 7, Size: 50x50 pixels
extern const unsigned char image_cell256[]; // BITMAP_CELL256_ID = 8, Size: 50x50 pixels
extern const unsigned char image_cell32[]; // BITMAP_CELL32_ID = 9, Size: 50x50 pixels
extern const unsigned char image_cell4[]; // BITMAP_CELL4_ID = 10, Size: 50x50 pixels
extern const unsigned char image_cell512[]; // BITMAP_CELL512_ID = 11, Size: 50x50 pixels
extern const unsigned char image_cell64[]; // BITMAP_CELL64_ID = 12, Size: 50x50 pixels
extern const unsigned char image_cell8[]; // BITMAP_CELL8_ID = 13, Size: 50x50 pixels
extern const unsigned char image_cellbg[]; // BITMAP_CELLBG_ID = 14, Size: 240x240 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_widgets_button_regular_height_50_medium_rounded_normal, 0, 240, 50, 5, 0, 230, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_50_medium_rounded_pressed, 0, 240, 50, 5, 0, 230, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell0, 0, 50, 50, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell1024, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell128, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell16, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell2, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell2048, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell256, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell32, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell4, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell512, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell64, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cell8, 0, 50, 50, 3, 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cellbg, 0, 240, 240, 3, 3, 234, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 234, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
